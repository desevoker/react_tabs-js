{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","isSelectedTab","className","map","cn","href","onClick","onClickHandler","title","content","App","useState","setSelectedTabId","newTab","ReactDOM","render","document","getElementById"],"mappings":"8NAEaA,EAAO,SAAC,GAId,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAW,UAAGH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAA/B,QACGD,EAAK,GAEnBO,EAAgB,SAAAF,GAAG,OAAIA,EAAIC,KAAOH,EAAYG,IAQpD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAJ,GAAG,OACX,oBAEEG,UAAWE,IAAG,CACZ,YAAaH,EAAcF,MACvB,KACN,UAAQ,MALV,SAOE,mBACEM,KAAI,WAAMN,EAAIC,IACdM,QAAS,kBApBA,SAACP,GACjBE,EAAcF,IACjBH,EAAcG,GAkBWQ,CAAeR,IAC9B,UAAQ,UAHV,SAKGA,EAAIS,SAXFT,EAAIC,WAkBjB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGL,EAAYY,cCpCRf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WAAO,IAAD,EACvB,EAA0CC,mBAASjB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KACMf,EAAW,UAAGH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAA/B,QACGD,EAAK,GAIzB,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBL,EAAYW,SAGlC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeA,EACfC,cAXiB,SAAAiB,GAAM,OAAID,EAAiBC,EAAOb,WCf3Dc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1f19d8fb.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId)\n                   ?? tabs[0];\n\n  const isSelectedTab = tab => tab.id === selectedTab.id;\n\n  const onClickHandler = (tab) => {\n    if (!isSelectedTab(tab)) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={cn({\n                'is-active': isSelectedTab(tab),\n              }) || null}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => onClickHandler(tab)}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId)\n                   ?? tabs[0];\n\n  const onClickHandler = newTab => setSelectedTabId(newTab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onClickHandler}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}